import{f as m,a as d}from"../chunks/C9u5aXvY.js";import{i as O}from"../chunks/r3nAZx4k.js";import{o as Q}from"../chunks/D3CWACNU.js";import{h as P,A as W,C as X,I as B,J as C,$ as Y,G as t,D as a,t as n,F as s,K as Z,k as tt,B as et,L as at}from"../chunks/afGwa9RP.js";import{h as st,s as i}from"../chunks/DFMJYXZ3.js";import{i as D}from"../chunks/Cr_xA6xF.js";function rt(o,v,e){var p=o==null?"":""+o;return p=p?p+" "+v:v,p===""?null:p}function nt(o,v,e,p,f,_){var u=o.__className;if(P||u!==e||u===void 0){var c=rt(e,p);(!P||c!==o.getAttribute("class"))&&(c==null?o.removeAttribute("class"):o.className=c),o.__className=e}return _}var ot=m('<meta name="description" content="Next-generation expense tracking backend"/>'),pt=m("<p>Loading system status...</p>"),it=m('<div><h3> </h3> <p><strong>Service:</strong> </p> <p><strong>Version:</strong> </p> <p><strong>Environment:</strong> </p> <p><strong>Uptime:</strong> </p> <p><strong>Response Time:</strong> </p></div> <div class="development svelte-qaptfp"><h3>Development Progress</h3> <p><strong>Current Phase:</strong> </p> <p><strong>Completion:</strong> </p> <p><strong>Next Phase:</strong> </p></div>',1),lt=m('<div class="health-card unhealthy svelte-qaptfp"><h3>Status: UNAVAILABLE</h3> <p>Unable to fetch system status</p></div>'),vt=m('<main class="container svelte-qaptfp"><header class="svelte-qaptfp"><h1 class="svelte-qaptfp">ðŸš€ Flux Backend</h1> <p>Next-generation expense tracking backend with AI, IoT, and blockchain integration</p></header> <section class="status"><h2>System Status</h2> <!></section> <section class="api-info svelte-qaptfp"><h2>API Endpoints</h2> <ul class="svelte-qaptfp"><li class="svelte-qaptfp"><code class="svelte-qaptfp">GET /api/health</code> - System health check</li> <li class="svelte-qaptfp"><code class="svelte-qaptfp">HEAD /api/health</code> - Simple health check</li></ul></section></main>');function ut(o,v){W(v,!1);let e=C(null),p=C(!0);Q(async()=>{try{const r=await fetch("/api/health");B(e,await r.json())}catch(r){console.error("Failed to fetch health data:",r)}finally{B(p,!1)}}),O();var f=vt();st(r=>{var h=ot();Y.title="Flux Backend",d(r,h)});var _=t(a(f),2),u=t(a(_),2);{var c=r=>{var h=pt();d(r,h)},F=(r,h)=>{{var L=l=>{var g=it(),x=tt(g),q=a(x),U=a(q);s(q);var k=t(q,2),w=t(a(k));s(k);var y=t(k,2),G=t(a(y));s(y);var b=t(y,2),M=t(a(b));s(b);var A=t(b,2),V=t(a(A));s(A);var S=t(A,2),j=t(a(S));s(S),s(x);var E=t(x,2),$=t(a(E),2),H=t(a($));s($);var N=t($,2),J=t(a(N));s(N);var I=t(N,2),K=t(a(I));s(I),s(E),et((R,z)=>{nt(x,1,`health-card ${n(e).data.status??""}`,"svelte-qaptfp"),i(U,`Status: ${R??""}`),i(w,` ${n(e).data.service??""}`),i(G,` ${n(e).data.version??""}`),i(M,` ${n(e).data.environment??""}`),i(V,` ${z??""}s`),i(j,` ${n(e).responseTime??""}ms`),i(H,` ${n(e).data.development.phase??""}`),i(J,` ${n(e).data.development.completion??""}`),i(K,` ${n(e).data.development.nextPhase??""}`)},[()=>n(e).data.status.toUpperCase(),()=>Math.round(n(e).data.system.uptime)],at),d(l,g)},T=l=>{var g=lt();d(l,g)};D(r,l=>{n(e)?l(L):l(T,!1)},h)}};D(u,r=>{n(p)?r(c):r(F,!1)})}s(_),Z(2),s(f),d(o,f),X()}export{ut as component};
